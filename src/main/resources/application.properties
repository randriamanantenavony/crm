spring.datasource.url=jdbc:mysql://localhost:3306/crm?createDatabaseIfNotExist=true
spring.datasource.username=@sql.name@
spring.datasource.password=@sql.password@
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always

spring.security.oauth2.client.registration.google.client-id=YourClientId
spring.security.oauth2.client.registration.google.client-secret=YourClientSecret
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&prompt=consent
# Customize the login page URL to include access_type=offline

# Removed invalid property 'authorization-uri-template'


weather.api.url=http://api.weatherapi.com/v1/current.json
weather.api.key=YourApiKey

app.base-url=http://localhost:8080/

company.name=Easy to build
